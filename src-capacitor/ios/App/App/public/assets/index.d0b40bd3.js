function loadScript(src) {
  return new Promise(function(resolve, reject) {
    let shouldAppend = false;
    let el = document.querySelector('script[src="' + src + '"]');
    if (!el) {
      el = document.createElement("script");
      el.type = "text/javascript";
      el.async = true;
      el.src = src;
      shouldAppend = true;
    } else if (el.hasAttribute("data-loaded")) {
      resolve(el);
      return;
    }
    el.addEventListener("error", reject);
    el.addEventListener("abort", reject);
    el.addEventListener("load", function loadScriptHandler() {
      el.setAttribute("data-loaded", true);
      resolve(el);
    });
    if (shouldAppend)
      document.head.appendChild(el);
  });
}
export { loadScript as l };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZDBiNDBiZDMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtcGx1Z2luLWxvYWQtc2NyaXB0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGxvYWRTY3JpcHQoc3JjKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBsZXQgc2hvdWxkQXBwZW5kID0gZmFsc2U7XG4gICAgbGV0IGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYz1cIicgKyBzcmMgKyAnXCJdJyk7XG4gICAgaWYgKCFlbCkge1xuICAgICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgZWwudHlwZSA9IFwidGV4dC9qYXZhc2NyaXB0XCI7XG4gICAgICBlbC5hc3luYyA9IHRydWU7XG4gICAgICBlbC5zcmMgPSBzcmM7XG4gICAgICBzaG91bGRBcHBlbmQgPSB0cnVlO1xuICAgIH0gZWxzZSBpZiAoZWwuaGFzQXR0cmlidXRlKFwiZGF0YS1sb2FkZWRcIikpIHtcbiAgICAgIHJlc29sdmUoZWwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCByZWplY3QpO1xuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCByZWplY3QpO1xuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uIGxvYWRTY3JpcHRIYW5kbGVyKCkge1xuICAgICAgZWwuc2V0QXR0cmlidXRlKFwiZGF0YS1sb2FkZWRcIiwgdHJ1ZSk7XG4gICAgICByZXNvbHZlKGVsKTtcbiAgICB9KTtcblxuICAgIGlmIChzaG91bGRBcHBlbmQpIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZWwpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gdW5sb2FkU2NyaXB0KHNyYykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgY29uc3QgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzY3JpcHRbc3JjPVwiJyArIHNyYyArICdcIl0nKTtcblxuICAgIGlmICghZWwpIHtcbiAgICAgIHJlamVjdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGRvY3VtZW50LmhlYWQucmVtb3ZlQ2hpbGQoZWwpO1xuXG4gICAgcmVzb2x2ZSgpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgdW5sb2FkU2NyaXB0LCBsb2FkU2NyaXB0IH07XG5cbmNvbnN0IHBsdWdpbiA9IHtcbiAgaW5zdGFsbDogZnVuY3Rpb24gKGFwcCkge1xuICAgIGFwcC5jb25maWcuZ2xvYmFsUHJvcGVydGllcy4kbG9hZFNjcmlwdCA9IGxvYWRTY3JpcHQ7XG4gICAgYXBwLmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzLiR1bmxvYWRTY3JpcHQgPSB1bmxvYWRTY3JpcHQ7XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBwbHVnaW47XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxXQUFXLEtBQUs7QUFFdkIsU0FBTyxJQUFJLFFBQVEsU0FBVSxTQUFTLFFBQVE7QUFDNUMsUUFBSSxlQUFlO0FBQ25CLFFBQUksS0FBSyxTQUFTLGNBQWMsaUJBQWlCLE1BQU0sSUFBSTtBQUMzRCxRQUFJLENBQUMsSUFBSTtBQUNQLFdBQUssU0FBUyxjQUFjLFFBQVE7QUFDcEMsU0FBRyxPQUFPO0FBQ1YsU0FBRyxRQUFRO0FBQ1gsU0FBRyxNQUFNO0FBQ1QscUJBQWU7QUFBQSxJQUNoQixXQUFVLEdBQUcsYUFBYSxhQUFhLEdBQUc7QUFDekMsY0FBUSxFQUFFO0FBQ1Y7QUFBQSxJQUNEO0FBRUQsT0FBRyxpQkFBaUIsU0FBUyxNQUFNO0FBQ25DLE9BQUcsaUJBQWlCLFNBQVMsTUFBTTtBQUNuQyxPQUFHLGlCQUFpQixRQUFRLFNBQVMsb0JBQW9CO0FBQ3ZELFNBQUcsYUFBYSxlQUFlLElBQUk7QUFDbkMsY0FBUSxFQUFFO0FBQUEsSUFDaEIsQ0FBSztBQUVELFFBQUk7QUFBYyxlQUFTLEtBQUssWUFBWSxFQUFFO0FBQUEsRUFDbEQsQ0FBRztBQUNIOzsifQ==
